React JS basics-1
Introduction,JSX,Rendering Elements,Components and Props, State and Lifecycle,

INTRODUCTION

import React from "react";
import "./style.css";

export default function App() {
  return (
    <div>
      <h1>Hello StackBlitz!</h1>
      <p>Start editing to see some magic happen :)</p>
    </div>
  );
}

<div id="root">
    <!-- This element's contents will be replaced with your component. -->
</div>

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<h1>Hello, world!</h1>);


INTRODUCTING JSX

const element = <h1>Hello, world!</h1>;

Embedding Expressions in JSX

const name = 'Josh Perez';
const element = <h1>Hello, {name}</h1>;

function formatName(user) {
  return user.firstName + ' ' + user.lastName;
}

const user = {
  firstName: 'Harper',
  lastName: 'Perez'
};

const element = (
  <h1>
    Hello, {formatName(user)}!
  </h1>
);

JSX is an Expression Too

function formatName(user) {
  return user.firstName + ' ' + user.lastName;
}

const user = {
  firstName: 'Harper',
  lastName: 'Perez'
};


function getGreeting(user) {
  if (user) {
    return <h1>Hello, {formatName(user)}!</h1>;
  }
  return <h1>Hello, Stranger.</h1>;
}

const element = (
  <h1>
   {getGreeting(user)}!
  </h1>
  
);
const root = ReactDOM.createRoot(document.getElementById('root'));

root.render(element);



Specifying Attributes with JSX

const element = <a href="https://www.reactjs.org"> link </a>;
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(element);



JSX Represents Objects

const element = React.createElement(
  'h1',
  {className: 'greeting'},
  'Hello, world!'
);
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(element);

// Note: this structure is simplified
const element = {
  type: 'h1',
  props: {
    className: 'greeting',
    children: 'Hello, world!'
  }
};

Rendering Elements

Elements are the smallest building blocks of React apps.

An element describes what you want to see on the screen:

const root = ReactDOM.createRoot(
  document.getElementById('root')
);
const element = <h1>Hello, world</h1>;
root.render(element);

Updating the Rendered Element

const root = ReactDOM.createRoot(
  document.getElementById('root')
);

function tick() {
  const element = (
    <div>
      <h1>Hello, world!</h1>
      <h2>It is {new Date().toLocaleTimeString()}.</h2>
    </div>
  );
  root.render(element);
}

setInterval(tick, 5000);

